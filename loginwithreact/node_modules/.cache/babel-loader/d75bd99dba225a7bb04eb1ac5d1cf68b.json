{"ast":null,"code":"var _jsxFileName = \"E:\\\\amadis\\\\reactsession\\\\reactproj\\\\src\\\\UserDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\"; //import { insertUsers } from \"./UserApi\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserDetails() {\n  _s();\n\n  const [name, userNameSet] = useState(\"\");\n  const [pno, setpno] = useState(\"\");\n  const [vpno, setvpno] = useState(\"\");\n  const [email, updateEmail] = useState(\"\");\n  const [address, updateAddress] = useState(\"\");\n  const [userId, setUserId] = useState(11);\n\n  function uservalue(event) {\n    let phone = event.target.value;\n\n    if (!Number(phone)) {\n      let error = /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error,Please fill it with numbers only\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 24\n      }, this);\n\n      setvpno(error);\n    } else {\n      setvpno(\"\");\n    }\n\n    setpno(phone);\n  }\n\n  function userName(event) {\n    userNameSet(event.target.value);\n  }\n\n  function addEmployee(event) {\n    const newUserObj = {\n      \"id\": userId,\n      \"name\": name,\n      \"username\": \"\",\n      \"email\": email,\n      \"address\": {\n        \"street\": address,\n        \"suite\": \"\",\n        \"city\": \"\",\n        \"zipcode\": \"\",\n        \"geo\": {\n          \"lat\": \"\",\n          \"lng\": \"\"\n        }\n      }\n    }; // console.log(newUserObj);\n\n    fetch('http://localhost:3000/users.json', {\n      method: 'POST',\n      body: JSON.stringify(newUserObj),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(json => {\n      console.log(json);\n      setUserId(userId + 1);\n      alert(\"user addded successfully\");\n    });\n  } //using this mehod we can add ,but this is a public api so update is not shown \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"empFull\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"empHeader\",\n      children: \"Employee Registration Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"empForm was-validated\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputEmail1\",\n          className: \"form-label\",\n          children: \" Employee Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"exampleInputEmail1\",\n          required: true,\n          onChange: userName,\n          value: name,\n          \"aria-describedby\": \"emailHelp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputEmail1\",\n          className: \"form-label\",\n          children: \" Employee Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          placeholder: \"Leave a comment here\",\n          id: \"floatingTextarea\",\n          value: address,\n          onChange: event => updateAddress(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputEmail1\",\n          className: \"form-label\",\n          children: \"Employee Phonenumber\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"exampleInputEmail1\",\n          required: true,\n          onChange: uservalue,\n          value: pno,\n          \"aria-describedby\": \"emailHelp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), vpno]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputEmail1\",\n          className: \"form-label\",\n          children: \"Employee Emailid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          id: \"exampleInputEmail1\",\n          onChange: event => updateEmail(event.target.value),\n          value: email,\n          required: true,\n          \"aria-describedby\": \"emailHelp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: addEmployee,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), \"\\u2003\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserDetails, \"HC6oU4+8KGIecyyIzF12uBMnHWU=\");\n\n_c = UserDetails;\nexport default UserDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDetails\");","map":{"version":3,"sources":["E:/amadis/reactsession/reactproj/src/UserDetails.js"],"names":["useState","useEffect","UserDetails","name","userNameSet","pno","setpno","vpno","setvpno","email","updateEmail","address","updateAddress","userId","setUserId","uservalue","event","phone","target","value","Number","error","userName","addEmployee","newUserObj","fetch","method","body","JSON","stringify","headers","then","response","json","console","log","alert"],"mappings":"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","sourcesContent":["import { useState, useEffect} from \"react\";\r\n//import { insertUsers } from \"./UserApi\";\r\n\r\nfunction UserDetails(){\r\n   \r\n     const [name,userNameSet] =useState(\"\");\r\n     const [pno,setpno] =useState(\"\");\r\n     const [vpno,setvpno] =useState(\"\");\r\n     \r\n     const [email,updateEmail] =useState(\"\");\r\n     const [address,updateAddress] =useState(\"\");\r\n     const [userId, setUserId] = useState(11);\r\n \r\n \r\n     function uservalue(event){\r\n         let phone=event.target.value;\r\n         if(!Number(phone))\r\n         {\r\n             let error=<strong>Error,Please fill it with numbers only</strong>;\r\n             setvpno(error);\r\n         } \r\n         else{\r\n             setvpno(\"\");\r\n         }       \r\n             setpno(phone);       \r\n                 \r\n     }\r\n     function userName(event){\r\n          userNameSet(event.target.value);        \r\n     }\r\n     \r\n     function addEmployee(event){\r\n         \r\n         const newUserObj={\r\n                \"id\": userId,\r\n                \"name\": name,\r\n                \"username\": \"\",\r\n                \"email\": email,\r\n                \"address\": {\r\n                  \"street\": address,\r\n                  \"suite\": \"\",\r\n                  \"city\": \"\",\r\n                  \"zipcode\": \"\",\r\n                  \"geo\": {\r\n                    \"lat\": \"\",\r\n                    \"lng\": \"\"\r\n                  }\r\n                }\r\n                \r\n              \r\n         };\r\n       // console.log(newUserObj);\r\n       fetch('http://localhost:3000/users.json', {\r\n  method: 'POST',\r\n  body: JSON.stringify(newUserObj),\r\n  headers: {\r\n    'Content-type': 'application/json; charset=UTF-8',\r\n  },\r\n})\r\n      .then((response) => response.json())\r\n            .then((json) => {\r\n                console.log(json);\r\n                setUserId(userId + 1);\r\n                alert(\"user addded successfully\");\r\n            });\r\n     }\r\n //using this mehod we can add ,but this is a public api so update is not shown \r\n    return(\r\n        <div className=\"empFull\">\r\n            <h1 className=\"empHeader\">Employee Registration Form</h1>\r\n            <form className=\"empForm was-validated\">\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\"> Employee Name</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" required onChange={userName} value={ name } aria-describedby=\"emailHelp\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\"> Employee Address</label>\r\n                    <textarea className=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" value={address}\r\n                    onChange={event => updateAddress(event.target.value)} \r\n                    ></textarea>\r\n                </div>\r\n                \r\n                \r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Employee Phonenumber</label>\r\n                    <input type=\"text\" className=\"form-control\"  id=\"exampleInputEmail1\" required onChange={uservalue} value={pno} aria-describedby=\"emailHelp\"/>\r\n                    {vpno}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Employee Emailid</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" onChange={event => updateEmail(event.target.value)} value={email} required aria-describedby=\"emailHelp\"/>\r\n                </div>\r\n                \r\n                \r\n                \r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={addEmployee}>Submit</button>&emsp;\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserDetails;"]},"metadata":{},"sourceType":"module"}