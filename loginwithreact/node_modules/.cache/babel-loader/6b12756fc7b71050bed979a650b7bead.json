{"ast":null,"code":"var _jsxFileName = \"E:\\\\amadis\\\\reactsession\\\\reactproj\\\\src\\\\UserDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getUsersById } from \"./UserApi\"; //import { insertUsers } from \"./UserApi\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserDetails() {\n  _s();\n\n  const [name, userNameSet] = useState(\"\");\n  const [pno, setpno] = useState(\"\");\n  const [vpno, setvpno] = useState(\"\");\n  const [email, updateEmail] = useState(\"\");\n  const [address, updateAddress] = useState(\"\");\n  const [userId, setUserId] = useState(11);\n  const navigate = useNavigate();\n  const routeParams = useParams();\n  useEffect(() => {\n    if (routeParams.id) {\n      getUsersById(routeParams.id).then(response => response.json()).then(userDetails => {\n        alert(\"ggf\");\n        console.log(userDetails); // setUserId(userId + 1);\n\n        userNameSet(userDetails.name);\n        updateEmail(userDetails.email);\n        alert(\"user added successfully\"); // navigate(\"/users\");\n      });\n    }\n  }, [routeParams.id]);\n\n  function uservalue(event) {\n    let phone = event.target.value;\n\n    if (!Number(phone)) {\n      let error = /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error,Please fill it with numbers only\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this);\n\n      setvpno(error);\n    } else {\n      setvpno(\"\");\n    }\n\n    setpno(phone);\n  }\n\n  function userName(event) {\n    userNameSet(event.target.value);\n  }\n\n  function addEmployee() {\n    const newUserObj = {\n      \"id\": userId,\n      \"name\": name,\n      \"username\": \"\",\n      \"email\": email,\n      \"address\": {\n        \"street\": address,\n        \"suite\": \"\",\n        \"city\": \"\",\n        \"zipcode\": \"\"\n      }\n    }; // console.log(newUserObj);\n\n    fetch('https://jsonplaceholder.typicode.com/users', {\n      method: 'POST',\n      body: JSON.stringify(newUserObj),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(json => {\n      alert(\"ggf\");\n      console.log(json);\n      setUserId(userId + 1); // resetForm();\n\n      alert(\"user added successfully\");\n      navigate(\"/users\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"empFull\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"empHeader\",\n      children: \"User Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"empForm was-validated\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputEmail1\",\n          className: \"form-label\",\n          children: \" Employee Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"exampleInputEmail1\",\n          required: true,\n          onChange: userName,\n          value: name,\n          \"aria-describedby\": \"emailHelp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputEmail1\",\n          className: \"form-label\",\n          children: \" Employee Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          placeholder: \"Leave a comment here\",\n          id: \"floatingTextarea\",\n          value: address,\n          onChange: event => updateAddress(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputEmail1\",\n          className: \"form-label\",\n          children: \"Employee Phonenumber\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"exampleInputEmail1\",\n          required: true,\n          onChange: uservalue,\n          value: pno,\n          \"aria-describedby\": \"emailHelp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), vpno]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleInputEmail1\",\n          className: \"form-label\",\n          children: \"Employee Emailid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\",\n          id: \"exampleInputEmail1\",\n          onChange: event => updateEmail(event.target.value),\n          value: email,\n          required: true,\n          \"aria-describedby\": \"emailHelp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), !routeParams.id && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: addEmployee,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 40\n      }, this), routeParams.id && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: addEmployee,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), \"\\u2003\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserDetails, \"EwpMgEuh2ZpK+iAXsSkXQxrlkq4=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = UserDetails;\nexport default UserDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDetails\");","map":{"version":3,"sources":["E:/amadis/reactsession/reactproj/src/UserDetails.js"],"names":["useState","useEffect","useNavigate","useParams","getUsersById","UserDetails","name","userNameSet","pno","setpno","vpno","setvpno","email","updateEmail","address","updateAddress","userId","setUserId","navigate","routeParams","id","then","response","json","userDetails","alert","console","log","uservalue","event","phone","target","value","Number","error","userName","addEmployee","newUserObj","fetch","method","body","JSON","stringify","headers"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { getUsersById } from \"./UserApi\";\r\n//import { insertUsers } from \"./UserApi\";\r\n\r\nfunction UserDetails() {\r\n\r\n    const [name, userNameSet] = useState(\"\");\r\n    const [pno, setpno] = useState(\"\");\r\n    const [vpno, setvpno] = useState(\"\");\r\n\r\n    const [email, updateEmail] = useState(\"\");\r\n    const [address, updateAddress] = useState(\"\");\r\n    const [userId, setUserId] = useState(11);\r\n    const navigate = useNavigate();\r\n    const routeParams=useParams();\r\n\r\n    useEffect(()=>{\r\n        if(routeParams.id){\r\n            getUsersById(routeParams.id).then((response) => response.json())\r\n            .then((userDetails) => {\r\n                alert(\"ggf\");\r\n                console.log(userDetails);\r\n               // setUserId(userId + 1);\r\n                userNameSet(userDetails.name);\r\n                updateEmail(userDetails.email);\r\n                alert(\"user added successfully\");\r\n                // navigate(\"/users\");\r\n            });\r\n        }\r\n    },[routeParams.id]);\r\n\r\n    function uservalue(event) {\r\n        let phone = event.target.value;\r\n        if (!Number(phone)) {\r\n            let error = <strong>Error,Please fill it with numbers only</strong>;\r\n            setvpno(error);\r\n        }\r\n        else {\r\n            setvpno(\"\");\r\n        }\r\n        setpno(phone);\r\n\r\n    }\r\n    function userName(event)\r\n     {\r\n        userNameSet(event.target.value);\r\n    }\r\n\r\n    function addEmployee() {\r\n\r\n        const newUserObj = {\r\n            \"id\": userId,\r\n            \"name\": name,\r\n            \"username\": \"\",\r\n            \"email\": email,\r\n            \"address\": {\r\n                \"street\": address,\r\n                \"suite\": \"\",\r\n                \"city\": \"\",\r\n                \"zipcode\": \"\",\r\n\r\n            }\r\n        };\r\n        // console.log(newUserObj);\r\n        fetch('https://jsonplaceholder.typicode.com/users', {\r\n            method: 'POST',\r\n            body: JSON.stringify(newUserObj),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n        })\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                alert(\"ggf\");\r\n                console.log(json);\r\n                setUserId(userId + 1);\r\n                // resetForm();\r\n                alert(\"user added successfully\");\r\n                 navigate(\"/users\");\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"empFull\">\r\n            <h1 className=\"empHeader\">User Form</h1>\r\n            <form className=\"empForm was-validated\">\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\"> Employee Name</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" required onChange={userName} value={name} aria-describedby=\"emailHelp\" />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\"> Employee Address</label>\r\n                    <textarea className=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" value={address}\r\n                        onChange={event => updateAddress(event.target.value)}\r\n                    ></textarea>\r\n                </div>\r\n\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Employee Phonenumber</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" required onChange={uservalue} value={pno} aria-describedby=\"emailHelp\" />\r\n                    {vpno}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Employee Emailid</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" onChange={event => updateEmail(event.target.value)} value={email} required aria-describedby=\"emailHelp\" />\r\n                </div>\r\n                {\r\n                    !routeParams.id && <button type=\"submit\" className=\"btn btn-primary\" onClick={addEmployee}>Submit</button>\r\n                }\r\n                {\r\n                    routeParams.id && <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                }\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={addEmployee}>Submit</button>&emsp;\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserDetails;"]},"metadata":{},"sourceType":"module"}