{"ast":null,"code":"var _jsxFileName = \"E:\\\\amadis\\\\reactsession\\\\reactproj\\\\src\\\\RouterDom.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React, { useEffect, useState } from 'react';\nimport RouteEmp from './RouteEmp';\nimport { BrowserRouter, HashRouter, Link, Route, Routes } from 'react-router-dom';\nimport UserList from './UserList';\nimport UserDetails from './UserDetails';\nimport Invalid from './Invalid';\nimport UserContainer from './UserContainer'; //import HookContainer from './HookContainer';\n//lazy load\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HookContainer = /*#__PURE__*/React.lazy(_c = () => import(\"./HookContainer\"));\n_c2 = HookContainer;\n\nfunction Routing() {\n  _s();\n\n  const [activeMenu, setActiveMenu] = useState(\"\");\n  const menuItems = [{\n    key: \"employees\",\n    \"displayName\": \"Employees\",\n    isDefaut: true\n  }, {\n    key: \"users\",\n    \"displayName\": \"User\",\n    isDefaut: false\n  }, {\n    key: \"hooks\",\n    \"displayName\": \"Hooks\",\n    isDefaut: false\n  }];\n  useEffect(() => {\n    const defaultMenu = menuItems.filter(menu => menu.isDefaut);\n    setActiveMenu(defaultMenu[0].key);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: menuItems.map(menu => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"menu-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/' + menu.key,\n            children: menu.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/employees\",\n          element: /*#__PURE__*/_jsxDEV(RouteEmp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/users\",\n          element: /*#__PURE__*/_jsxDEV(UserContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 51\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"all\",\n            element: /*#__PURE__*/_jsxDEV(UserList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"new\",\n            element: /*#__PURE__*/_jsxDEV(UserDetails, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \":id\",\n            element: /*#__PURE__*/_jsxDEV(UserDetails, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(UserDetails, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/hooks\",\n          element: /*#__PURE__*/_jsxDEV(React.Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Loading....\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 51\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(HookContainer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Invalid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(RouteEmp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Routing, \"2OmL7gqx2QuP5eYHxFRJU/Xdzhc=\");\n\n_c3 = Routing;\nexport default Routing;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"HookContainer$React.lazy\");\n$RefreshReg$(_c2, \"HookContainer\");\n$RefreshReg$(_c3, \"Routing\");","map":{"version":3,"sources":["E:/amadis/reactsession/reactproj/src/RouterDom.js"],"names":["React","useEffect","useState","RouteEmp","BrowserRouter","HashRouter","Link","Route","Routes","UserList","UserDetails","Invalid","UserContainer","HookContainer","lazy","Routing","activeMenu","setActiveMenu","menuItems","key","isDefaut","defaultMenu","filter","menu","map","displayName"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport React, { useEffect, useState } from 'react';\r\nimport RouteEmp from './RouteEmp';\r\nimport { BrowserRouter, HashRouter, Link, Route, Routes } from 'react-router-dom';\r\nimport UserList from './UserList';\r\nimport UserDetails from './UserDetails';\r\nimport Invalid from './Invalid';\r\nimport UserContainer from './UserContainer';\r\n//import HookContainer from './HookContainer';\r\n//lazy load\r\nconst HookContainer = React.lazy(() => import(\"./HookContainer\"));\r\n\r\n\r\nfunction Routing() {\r\n    const [activeMenu, setActiveMenu] = useState(\"\");\r\n\r\n    const menuItems = [\r\n        { key: \"employees\", \"displayName\": \"Employees\", isDefaut: true },\r\n        { key: \"users\", \"displayName\": \"User\", isDefaut: false },\r\n        { key: \"hooks\", \"displayName\": \"Hooks\", isDefaut: false }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        const defaultMenu = menuItems.filter((menu) => menu.isDefaut);\r\n        setActiveMenu(defaultMenu[0].key);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {/**2 typeof router\r\n         * BrowserRouter-->ex:localhost:3000/users =>this type is loading with user \r\n         * find error easy\r\n         * HashRouter-->ex:localhost:3000/#/users =>it loading with localhost only\r\n         * any error occurs not able to find the eror is from which part\r\n         */}\r\n\r\n            {/* <BrowserRouter>\r\n                <ul>\r\n                    {\r\n                        menuItems.map((menu) =>\r\n                            <Link to={'/' + menu.key}>{menu.displayName}</Link>\r\n                        )\r\n                    }\r\n                </ul>\r\n\r\n                <Routes>\r\n                    <Route path='/employees' element={<RouteEmp />} />\r\n                    <Route path='/users' element={<UserJson />} >\r\n                        <Route path='all' element={<UserList/>} />\r\n                        <Route path='new' element={<UserDetails/>} />\r\n                        <Route path=':id' element={<UserDetails/>} />\r\n                    </Route>\r\n                    <Route path='/hooks' element={<HookContainer />} />\r\n                    <Route path='/' element={<RouteEmp/>} />\r\n                </Routes>\r\n            </BrowserRouter> */}\r\n\r\n\r\n\r\n            <HashRouter>\r\n                <ul>\r\n                    {\r\n                        menuItems.map((menu) =>\r\n                            <li className='menu-item'>\r\n                                <Link to={'/' + menu.key}>{menu.displayName}</Link>\r\n                                {/* <a href={'/'+menu.key}>{menu.displayName}</a> this will load entair page,so that we not use it */}\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                <Routes>\r\n                    <Route path='/employees' element={<RouteEmp />} />\r\n                    <Route path='/users' element={<UserContainer />} >\r\n                        <Route path='all' element={<UserList />} />\r\n                        <Route path='new' element={<UserDetails />} />\r\n                        <Route path=':id' element={<UserDetails />} />\r\n                        <Route index element={<UserDetails />} />\r\n                    </Route>\r\n\r\n                    {/* <Route path='users' element={\r\n            <React.Suspense fallback={<h2>Loading...</h2>}>\r\n              <UserContainer />\r\n            </React.Suspense>\r\n          }>\r\n            <Route path='new' element={\r\n              <React.Suspense fallback={<h2>Loading...</h2>}>\r\n                <UserDetails />\r\n              </React.Suspense>\r\n            } />\r\n            <Route path=':id' element={\r\n              <React.Suspense fallback={<h2>Loading...</h2>}>\r\n                <UserDetails />\r\n              </React.Suspense>\r\n            } />\r\n             <Route index element={\r\n              <React.Suspense fallback={<h2>Loading...</h2>}>\r\n                <UserList />\r\n              </React.Suspense>\r\n            } />\r\n          </Route> */}\r\n\r\n                    {/* <Route path='/hooks' element={<HookContainer />} /> */}\r\n                    {/**For lazy loaded provide like this */}\r\n                    <Route path='/hooks' element={\r\n                        <React.Suspense fallback={<h2>Loading....</h2>}>\r\n                            <HookContainer />\r\n                        </React.Suspense>\r\n                    } />{/**for index =>path=\"\" to index */}\r\n                    <Route path='*' element={<Invalid />} /> {/**it means path is anything apart from defined path */}\r\n                    <Route path='/' element={<RouteEmp />} />\r\n                    {/* \r\n                                or\r\n                    <Route index element={<RouteEmp/>} /> \r\n                                or\r\n                     \r\n                    */}\r\n                </Routes>\r\n\r\n                {/* // {<Swicth>\r\n                //   <Route path='/employees'>\r\n                //     <EmployeeContainer />\r\n                //   </Route>\r\n                //   <Route path='/users'>\r\n                //     <UserContainer />\r\n                //   </Route>\r\n                // </Swicth> } */}\r\n            </HashRouter>\r\n\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Routing;\r\n"]},"metadata":{},"sourceType":"module"}